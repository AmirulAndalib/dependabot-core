const path = require("path");
const os = require("os");
const fs = require("fs");
const {
  findVulnerableDependencies,
} = require("../../lib/npm/vulnerability-auditor");
const helpers = require("./helpers");

describe("findVulnerableDependencies", () => {
  let tempDir;
  beforeEach(() => {
    tempDir = fs.mkdtempSync(os.tmpdir() + path.sep);
  });
  afterEach(() => fs.rm(tempDir, { recursive: true }, () => {}));

  it("finds vulnerable dependencies", async () => {
    helpers.copyDependencies("vulnerability-auditor/simple", tempDir);

    const advisories = [{
      dependency_name: "form-data",
      affected_versions: [
        ">= 0, < 2.5.4",
        ">= 3.0.0, < 3.0.4",
        ">= 4.0.0, < 4.0.4"
      ]
    }];
    const actual = await findVulnerableDependencies(tempDir, advisories);
    const expected = {
      dependency_name: "form-data",
      fix_updates: [
        {
          dependency_name: "form-data",
          current_version: "4.0.0",
          top_level_ancestors: [],
          target_version: "4.0.4"
        },
      ],
      top_level_ancestors: [
        "form-data"
      ],
      current_version: "4.0.0",
      fix_available: true,
      target_version: "4.0.4"
    };
    expect(actual).toEqual(expected);
  });

  it("finds vulnerable dependencies when multiple versions of the same package are affected (lower version is top level)", async () => {
    helpers.copyDependencies("vulnerability-auditor/multi-version-lower-is-top-level", tempDir);

    const advisories = [{
      dependency_name: "form-data",
      affected_versions: [
        ">= 0, < 2.5.4",
        ">= 3.0.0, < 3.0.4",
        ">= 4.0.0, < 4.0.4"
      ]
    }];
    const actual = await findVulnerableDependencies(tempDir, advisories);
    const expected = {
      dependency_name: "form-data",
      fix_updates: [
        {
        dependency_name: "form-data",
        current_version: "4.0.0",
        top_level_ancestors: [
            "axios"
          ],
          target_version: "4.0.4"
        },
        {
          dependency_name: "form-data",
          current_version: "3.0.1",
          top_level_ancestors: [
            "jest"
          ],
          target_version: "3.0.4"
        }
      ],
      top_level_ancestors: [
        "axios",
        "jest"
      ],
      current_version: "3.0.1",
      fix_available: true,
      target_version: "3.0.4"
    };
    expect(actual).toEqual(expected);
  });

  it("finds vulnerable dependencies when multiple versions of the same package are affected (higher version is top level)", async () => {
    helpers.copyDependencies("vulnerability-auditor/multi-version-higher-is-top-level", tempDir);

    const advisories = [{
      dependency_name: "form-data",
      affected_versions: [
        ">= 0, < 2.5.4",
        ">= 3.0.0, < 3.0.4",
        ">= 4.0.0, < 4.0.4"
      ]
    }];
    const actual = await findVulnerableDependencies(tempDir, advisories);
    const expected = {
      dependency_name: "form-data",
      fix_updates: [
        {
        dependency_name: "form-data",
        current_version: "4.0.0",
        top_level_ancestors: [
            "axios"
          ],
          target_version: "4.0.4"
        },
        {
          dependency_name: "form-data",
          current_version: "3.0.1",
          top_level_ancestors: [
            "jest"
          ],
          target_version: "3.0.4"
        }
      ],
      top_level_ancestors: [
        "axios",
        "jest"
      ],
      current_version: "4.0.0",
      fix_available: true,
      target_version: "4.0.4"
    };
    expect(actual).toEqual(expected);
  });
});
